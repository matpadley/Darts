@using DartsScorer.Main.Match.RoundTheBoard
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model DartsScorer.Main.Match.RoundTheBoard.Match
@{
    ViewData["Title"] = "Round the Board";
}

<h1>@ViewBag.Title</h1>

<div class="d-flex">
    <div class="flex-fill">
        
        @{
            if (Model.Winner != null)
            {
                <h2>Winner: @Model.Winner.Name</h2>
            }
        }
        
        @Html.Partial("MatchPlayers", Model.Players)
        @{
            if (Model.Players.Any())
            {
                <form asp-action="StartMatch" method="post">
                    <button type="submit" class="btn btn-primary">Start Match</button>
                </form>
            }
        }
    </div>
    <div class="flex-fill">
        @{
            if (Model.CurrentPlayer == null)
            {
                @Html.Partial("AddPlayer")
                <br />
                // foreach of the players in the viewbag.players create a dropdown
                // with the player names
                <form asp-action="AddPlayer" method="post">
                    <div class="input-group">
                        <select class="form-control" id="playerName" name="playerName" required>
                            <option value="">Select a player</option>
                            @foreach (var player in ViewBag.PlayerList as List<SelectListItem>)
                            {
                                <option value="@player.Text">@player.Value</option>
                            }
                        </select>
                        <button type="submit" class="btn btn-primary">Pick Player</button>
                    </div>
                </form>
            }
            else
            {   

                var currentPlayer = Model.CurrentPlayer as RoundTheBoardPlayer;
                
                @Html.Partial("PlayerScore", currentPlayer)
                
                @if (!currentPlayer.Finished())
                {
                    <form asp-action="Throw" method="post">
                        <div class="input-group">
                            <!-- add radio group that will post a string called multiplier to the form post-->
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="multiplier" value="S" id="single" checked>
                                <label class="form-check-label" for="single">
                                    Single
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="multiplier" value="D" id="double">
                                <label class="form-check-label" for="double">
                                    Double
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="multiplier" value="T" id="treble">
                                <label class="form-check-label" for="treble">
                                    Treble
                                </label>
                            </div>
                            <div class="btn-group" role="group" aria-label="Throw Values">
                                @for (int i = 1; i <= 20; i++)
                                {
                                    <button type="button" class="btn btn-secondary btn-score" onclick="setThrowValue(this, @i)">@i</button>
                                }
                            </div>
                            <input type="hidden" id="throwValue" name="throwValue" value="" />
                            <button type="submit" class="btn btn-primary">Throw</button>
                        </div>
                    </form>
                }
                
                for(var leg = 0; leg < currentPlayer.Legs.Count; leg++)
                {
                    <p><b>Leg @(leg + 1)</b> - @string.Join(", ", currentPlayer.Legs.ElementAt(leg).Throws.Select(thr => thr.ToString()))</p>
                }
            }
        }
    </div>
</div>